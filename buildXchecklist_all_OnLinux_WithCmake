#!/bin/bash
#
# This script will build Xchecklist for lin, win and mac for XP 11, 19 and 9 using Cmake
#
# How to run
# ./buildXchecklist_all_OnLinux_WithCmake

function build() {
  local CMAKE_FLAGS=$1
  local SRC_DIR=$2
  local RESULT=$3
  local TARGET=$4

  rm -r build/*
  pushd build
  cmake -G Ninja  ${CMAKE_FLAGS} ${SRC_DIR} &&
  ninja -v &&
  cp ${RESULT} ${TARGET}
  popd
}




rm -rf release build
mkdir -p release/Checker &&
mkdir -p release/Xchecklist/64 &&
mkdir build

OSX_CMAKE_FLAGS="-DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-ubuntu-osxcross-10.11.cmake -DCMAKE_FIND_ROOT_PATH=/usr/osxcross/SDK/MacOSX10.11.sdk/"
B32_CMAKE_FLAGS="-D32BIT=ON"
WIN32_CMAKE_FLAGS="-DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-mingw-w64-i686.cmake"
WIN64_CMAKE_FLAGS="-DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-mingw-w64-x86-64.cmake"

# Windows build
build "${WIN64_CMAKE_FLAGS}" ../src libwin.xpl ../release/Xchecklist/64/win.xpl
build "${B32_CMAKE_FLAGS} ${WIN32_CMAKE_FLAGS}" ../src libwin.xpl ../release/Xchecklist/win.xpl
build "${WIN64_CMAKE_FLAGS}" ../checker win_checker_64bit.exe ../release/Checker
build "${B32_CMAKE_FLAGS} ${WIN32_CMAKE_FLAGS}" ../checker win_checker_32bit.exe ../release/Checker

# Linux build
build "" ../src liblin.xpl ../release/Xchecklist/64/lin.xpl
build "${B32_CMAKE_FLAGS}" ../src liblin.xpl ../release/Xchecklist/lin.xpl
build "" ../checker lin_checker_64 ../release/Checker
build "${B32_CMAKE_FLAGS}" ../checker lin_checker_32 ../release/Checker
build "" ../simon simon_lin64 ../release/Xchecklist
build "${B32_CMAKE_FLAGS}" ../simon simon_lin32 ../release/Xchecklist

# Mac build
export PATH=${PATH}:/usr/osxcross/bin
build "${OSX_CMAKE_FLAGS}" ../src libmac.xpl ../release/Xchecklist/mac.xpl
build "${OSX_CMAKE_FLAGS}" ../checker mac_checker ../release/Checker
build "${OSX_CMAKE_FLAGS}" ../simon simon_mac ../release/Xchecklist

#
